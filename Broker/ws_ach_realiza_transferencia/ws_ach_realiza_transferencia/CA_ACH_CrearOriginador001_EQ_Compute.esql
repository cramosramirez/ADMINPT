

CREATE COMPUTE MODULE CA_ACH_CrearOriginador001_EQ_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE descripcion CHARACTER; 
		DECLARE failureOut 	CHARACTER; 
		
			SET OutputRoot.MQMD = Environment.MQMD;	
			
			set failureOut =  Environment.Variables.failureOut; 
				   		 					   		 					   		 			 				   		 			 
		   	if failureOut = 'A' then 	 			 			 
			    if InputRoot.XMLNSC.realizar_transferencia.resultado.descripcion = 'A timeout error occurred whilst performing an SSL socket operation' then 
			    	set descripcion = 'Ocurrió un error al momento de realizar la transferencia, por favor intenta más tarde.';
			    else 
			    	 set descripcion = InputRoot.XMLNSC.realizar_transferencia.resultado.descripcion;
			    end if;
		   	elseif  failureOut = 'T' then 
		   		if InputRoot.XMLNSC.realizar_transferencia.resultado.descripcion = 'A timeout error occurred whilst performing an SSL socket operation' then 
			    	set OutputRoot.JSON.Data.StatusCode = 1; 
					set OutputRoot.JSON.Data.StatusDescription = 'Operacion realizada con éxito';
			    	propagate to terminal 2;
			    	return false;
			    else 
			    	 set descripcion = InputRoot.XMLNSC.realizar_transferencia.resultado.descripcion;
			    end if;
		   	else 
		   		 set descripcion = InputRoot.XMLNSC.realizar_transferencia.resultado.descripcion;
		   	end if;	
		   	
		   		  	
		  if  descripcion = 'Child SQL exception' then 
		  		set OutputRoot.JSON.Data.StatusCode = 1; 
					set OutputRoot.JSON.Data.StatusDescription = 'Operacion realizada con éxito';
			    	propagate to terminal 2;
			    	return false;
		  end if;	
		  	  
		SET OutputRoot.XMLNSC.realizar_transferencia.resultado.codigo = InputRoot.XMLNSC.realizar_transferencia.resultado.codigo;
		SET OutputRoot.XMLNSC.realizar_transferencia.resultado.descripcion = descripcion; 		
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
